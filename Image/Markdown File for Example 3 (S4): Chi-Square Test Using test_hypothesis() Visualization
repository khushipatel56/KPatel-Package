---
title: "KPatel Package: Chi-Square Test Example (S4)"
author: "Khushi Patel"
date: "`r Sys.Date()`"
output: html_document
---

## Steps and Code for Performing a Chi-Square Test

1. **Load Necessary Libraries**:
    - The `KPatel`, `dplyr`, and `ggplot2` libraries are loaded to perform data manipulation, hypothesis testing, and visualization.

    ```{r setup, include=FALSE}
    library(KPatel)
    library(dplyr)
    library(ggplot2)
    ```

2. **Prepare the Data**:
    - The `mtcars` dataset is cleaned by converting the `cyl` (number of cylinders) and `gear` (number of gears) columns into factors.
    
    ```{r}
    mtcars_clean <- mtcars %>%
      mutate(cyl = as.factor(cyl),
             gear = as.factor(gear))
    head(mtcars_clean)
    ```

3. **Perform the Chi-Square Test**:
    - The `HypothesisTestResult` S4 class is used to perform a chi-square test between the `cyl` and `gear` variables in the dataset.
    
    ```{r}
    chi_result <- new("HypothesisTestResult", 
                      data = mtcars_clean, 
                      var1 = "cyl", 
                      var2 = "gear", 
                      test_type = "chisq.test")
    ```

4. **Display the Chi-Square Test Result**:
    - The result of the chi-square test is displayed using the `show` method defined in the `HypothesisTestResult` S4 class.

    ```{r}
    show(chi_result)
    ```

5. **Define the `HypothesisTestResult` S4 Class**:
    - The S4 class is defined with slots for data, the two variables being tested, the test type, and the result. The class also includes an `initialize` method to perform the chi-square test and a `show` method to print the results.
    
    ```{r}
    setClass("HypothesisTestResult",
             slots = c(
               data = "data.frame",
               var1 = "character",
               var2 = "character",
               test_type = "character",
               result = "ANY"
             ))

    setMethod("initialize", "HypothesisTestResult",
              function(.Object, data, var1, var2, test_type) {
                .Object@data <- data
                .Object@var1 <- var1
                .Object@var2 <- var2
                .Object@test_type <- test_type
                
                # Create the contingency table for chi-square test
                tbl <- table(data[[var1]], data[[var2]])
                
                # Perform the chi-square test
                .Object@result <- chisq.test(tbl)
                
                .Object
              })

    setMethod("show", "HypothesisTestResult", function(object) {
      cat("Chi-Square Test Result for", object@var1, "vs", object@var2, "\n\n")
      print(object@result)
    })
    ```

6. **Create a Contingency Table for Visualization**:
    - A contingency table of the `cyl` and `gear` variables is created to visualize the relationship between them.
    
    ```{r}
    tbl <- table(mtcars_clean$cyl, mtcars_clean$gear)
    ```

7. **Visualize the Contingency Table with a Heatmap**:
    - A heatmap is created to visualize the frequency of observations in each combination of `cyl` and `gear`. The `ggplot2` library is used for this visualization.
    
    ```{r}
    ggplot(as.data.frame(tbl), aes(x = Var1, y = Var2, fill = Freq)) +
      geom_tile() +
      scale_fill_gradient(low = "white", high = "blue") +
      labs(
        title = "Contingency Table Heatmap: cyl vs gear",
        x = "Number of Cylinders",
        y = "Number of Gears",
        fill = "Frequency"
      ) +
      theme_minimal()
    ```

---

This markdown file outlines the steps in the code, explains the major actions taken, and includes the relevant code for performing a chi-square test and visualizing the results using the `KPatel` package in R. You can copy and paste this directly into a markdown file for documentation or presentation purposes. Let me know if you need any further changes!
